name: 'Checkout and Prepare Step'
description: 'Apply workarounds + Java Setup + Maven Repository Caching'
inputs:
  maven-cache-key:
    description: 'Cache key for maven repository'
    required: false
  maven-cache-restore-key:
    description: 'Cache restore key for maven repository'
    required: false
  java-version:
    description: 'Java version to setup'
    required: false
  clone:
    description: 'Wheather to clone the repository as part of the composite action'
    required: false
    default: true
  GPG_PRIVATE_KEY:
    required: false
  GPG_PASSPHRASE:
    required: false
  BUILD_USER:
    required: false
  BUILD_USER_PASSWD:
    required: false
  BUILD_USER_EMAIL:
    required: false

runs:
  using: "composite"
  steps:
    - name: "Use GNU tar instead BSD tar (Workaround https://github.com/actions/cache/issues/576#issuecomment-830796954)"
      if: ${{ runner.os == 'Windows' }}
      shell: cmd
      run: echo C:\Program Files\Git\usr\bin>>"%GITHUB_PATH%"
    
    - name: Enable git support for long paths on Windows
      if: ${{ runner.os == 'Windows' }}
      shell: cmd
      run: git config --system core.longpaths true
        
    - name: Restore m2 repository
      if: inputs.maven-cache-key != ''
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ inputs.maven-cache-key }}
        restore-keys: ${{ inputs.maven-cache-restore-key }}

    - name: Set up OpenJDK
      if: inputs.java-version != ''
      uses: actions/setup-java@v1
      with:
        java-version: ${{ inputs.java-version }}

    - name: Import GPG key
      uses: crazy-max/ghaction-import-gpg@v4
      if: inputs.GPG_PRIVATE_KEY != '' && inputs.GPG_PASSPHRASE != ''
      with:
        gpg_private_key: ${{ inputs.GPG_PRIVATE_KEY }}
        passphrase: ${{ inputs.GPG_PASSPHRASE }}
        git_user_signingkey: true
        git_commit_gpgsign: true
        
    - name: Setup git user
      if: inputs.BUILD_USER != '' && inputs.BUILD_USER_EMAIL != ''
      shell: bash
      run: |
        git config --global user.email ${{ inputs.BUILD_USER_EMAIL }}
        git config --global user.name ${{ inputs.BUILD_USER }}
        
    - name: Setup repo for push on protected branch
      if: inputs.BUILD_USER != '' && inputs.BUILD_USER_PASSWD != ''
      shell: bash
      run: |
        ORIGIN="$(git config --get remote.origin.url)"
        SED_OUT=$(echo $ORIGIN | sed -r -E -n 's@^https:\/\/(github.com.*)@\1@p')
        if [ -n "$SED_OUT" ]
        then
          ORIGIN="https://${{ inputs.BUILD_USER }}:${{ inputs.BUILD_USER_PASSWD }}@$SED_OUT"
          git remote set-url origin $ORIGIN
          echo "Changed remote URL to enable pushing on protected branch"
        fi
        
    - name: Clone Repository
      if: inputs.clone
      uses: actions/checkout@v2
